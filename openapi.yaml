openapi: 3.1.0
info:
  title: products
  description: The Products microservice is a self-contained service responsible for
    managing product data within a larger application. It provides functionalities
    to create, retrieve, update, and delete product information.
  version: local-sha
paths:
  /health/products:
    get:
      tags:
      - health
      summary: Health Check
      operationId: health_check_health_products_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /public/v1/products:
    post:
      tags:
      - Product
      summary: Create a new product
      description: Creates a new product in the system
      operationId: CREATE_PRODUCT
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PostSchemaProductIn'
              title: Product Input
              description: The product content
        required: true
      responses:
        '201':
          description: Object Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSchemaProductOut'
        '202':
          description: Object updated
          content:
            application/json: {}
        '400':
          description: The server cannot or will not process the request due to something
            that is perceived to be a client error
          content:
            application/json: {}
        '401':
          description: Unauthorized. Ensure you are using a valid JWT token.
          content:
            application/json: {}
        '403':
          description: Credential error. Ensure you are using a valid JWT token.
          content:
            application/json: {}
        '422':
          description: Check parameter values correctness in according to the documentation
            above.
          content:
            application/json: {}
        '500':
          description: Internal server error. Please contact the support team.
          content:
            application/json: {}
        '503':
          description: Service is not currently available. Try again later or contact
            the support team.
          content:
            application/json: {}
  /public/v1/products/id/{product_id}:
    put:
      tags:
      - Put
      summary: Update a product
      description: Updates the details of an existing product by its ID
      operationId: Update product by ID
      parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: string
          title: Product Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/PutSchemaProductIn'
              title: Product Details
              description: The details to update for the product
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutSchemaProductOut'
        '202':
          content:
            application/json: {}
          description: Object updated
        '400':
          content:
            application/json: {}
          description: The server cannot or will not process the request due to something
            that is perceived to be a client error
        '401':
          content:
            application/json: {}
          description: Unauthorized. Ensure you are using a valid JWT token.
        '403':
          content:
            application/json: {}
          description: Credential error. Ensure you are using a valid JWT token.
        '422':
          content:
            application/json: {}
          description: Check parameter values correctness in according to the documentation
            above.
        '500':
          content:
            application/json: {}
          description: Internal server error. Please contact the support team.
        '503':
          content:
            application/json: {}
          description: Service is not currently available. Try again later or contact
            the support team.
    delete:
      tags:
      - Delete
      summary: Delete a product
      description: Deletes a specific product by its ID
      operationId: Delete product by ID
      parameters:
      - name: product_id
        in: path
        required: true
        schema:
          type: string
          title: Product Id
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSchemaProductOut'
        '500':
          content:
            application/json: {}
          description: Internal server error. Please contact the support team.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    DeleteSchemaProductOut:
      properties:
        ID:
          type: string
          title: Id
        message:
          anyOf:
          - type: string
          - type: 'null'
          title: Message
      additionalProperties: false
      type: object
      required:
      - ID
      title: DeleteSchemaProductOut
      examples:
      - ID: 1caff255-ef44-4066-a7a3-884c81c34ecf
        message: Product correctly deleted
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    PostSchemaProductIn:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        category_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Category Id
        brand_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Brand Id
        price:
          type: number
          title: Price
        weight:
          anyOf:
          - type: number
          - type: 'null'
          title: Weight
      additionalProperties: false
      type: object
      required:
      - name
      - description
      - price
      title: PostSchemaProductIn
      examples:
      - brand_id: 1c1a8ef9-7dab-4397-b73a-5f9a4143c135
        category_id: 7e96755c-88a3-4f3d-9f59-4d3ab3b277ee
        description: This is a high-quality, comfortable T-Shirt
        name: Amazing T-Shirt
        price: 19.99
        weight: 0.25
    PostSchemaProductOut:
      properties:
        product_id:
          type: string
          title: Product Id
        created_at:
          type: string
          format: date-time
          title: Created At
      additionalProperties: false
      type: object
      required:
      - product_id
      - created_at
      title: PostSchemaProductOut
      examples:
      - ID: 1caff255-ef44-4066-a7a3-884c81c34ecf
        created_at: '2024-06-08T17:40:00Z'
    PutSchemaProductIn:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        category_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Category Id
        brand_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Brand Id
        price:
          anyOf:
          - type: number
          - type: 'null'
          title: Price
        weight:
          anyOf:
          - type: number
          - type: 'null'
          title: Weight
        cover_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Cover Url
        updated_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Updated At
      additionalProperties: false
      type: object
      title: PutSchemaProductIn
      examples:
      - name: Updated T-Shirt
        price: 29.99
    PutSchemaProductOut:
      properties:
        ID:
          type: string
          title: Id
        updated_at:
          type: string
          title: Updated At
      additionalProperties: false
      type: object
      required:
      - ID
      - updated_at
      title: PutSchemaProductOut
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
